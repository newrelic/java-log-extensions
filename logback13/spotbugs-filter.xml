<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2025. New Relic Corporation. All rights reserved.
  ~ SPDX-License-Identifier: Apache-2.0
  -->
<FindBugsFilter xmlns="https://github.com/spotbugs/filter/3.0.0"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="https://github.com/spotbugs/filter/3.0.0 https://raw.githubusercontent.com/spotbugs/spotbugs/3.1.0/spotbugs/etc/findbugsfilter.xsd">

    <Match>
        <!--
        This is not final so that it can be reassigned in tests to inject a mock Agent.
        -->
        <Bug pattern="MS_SHOULD_BE_FINAL"/>
        <Class name="com.newrelic.logging.logback13.NewRelicAsyncAppender"/>
    </Match>

    <Match>
        <!--
        We have to implement all methods of the LayoutBase<ILoggingEvent>.
        -->
        <Bug pattern="EI_EXPOSE_REP2" />
        <Class name="com.newrelic.logging.logback13.NewRelicJsonLayout"/>
<!--        <Method name="setContext" />-->
    </Match>

    <Match>
        <!--
        We have to implement all methods of the LayoutBase<ILoggingEvent>.
        -->
        <Bug pattern="EI_EXPOSE_REP" />
        <Class name="com.newrelic.logging.logback13.NewRelicJsonLayout"/>
        <Method name="getContext" />
    </Match>

    <Match>
        <!--
        This method calls getCallerData() and is required to populate the stack trace in the log event,
        even if the return value is ignored.
        -->
        <Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT" />
        <Class name="com.newrelic.logging.logback13.NewRelicAsyncAppender"/>
        <Method name="preprocess" />
    </Match>

    <Match>
        <!--
        This method calls getCallerData() and is required to populate the stack trace in the log event,
        even if the return value is ignored.
        -->
        <Bug pattern="EI_EXPOSE_REP2" />
        <Class name="com.newrelic.logging.logback13.CustomLoggingEventWrapper"/>
    </Match>

    <Match>
        <!--
        Using ByteArrayOutputStream is being used to write the JSON output, and run test assertions.
        -->
        <bug pattern="DM_DFAULT_ENCODING" />
        <Class name="com.newrelic.logging.logback13.NewRelicLogback13Tests"/>
    </Match>

    <Match>
        <!--
          We have to write to a static because otherwise this value is set based on a classload.
        -->
        <Bug pattern="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD"/>
        <Class name="com.newrelic.logging.logback13.NewRelicLogback11Tests"/>
    </Match>

</FindBugsFilter>